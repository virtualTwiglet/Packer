packer {
  required_plugins {
    vsphere = {
      source  = "github.com/hashicorp/vsphere"
      version = "~> 1"
    }
  }
}

variable "cluster" {
  type = string
}

variable "datacenter" {
  type = string
}

variable "datastore" {
  type = string
}

variable "folder" {
  type = string
}

variable "host" {
  type = string
}

variable "network" {
  type = string
}

variable "notes" {
  type = string
}

variable "vcenter_server" {
  type = string
}

variable "vm_name" {
  type = string
}

variable "vsphere_password" {
  type = string
}

variable "vsphere_username" {
  type = string
}

variable "winrm_password" {
  type = string
}

variable "winrm_username" {
  type = string
}

source "vsphere-iso" "autogenerated_1" {
  boot_order            = "disk,cdrom"
  cluster               = "${var.cluster}"
  communicator          = "winrm"
  convert_to_template   = "true"
  cpus                  = "2"
  datacenter            = "${var.datacenter}"
  datastore             = "${var.datastore}"
  disk_controller_type  = "lsilogic-sas"
  disk_size             = "32768"
  disk_thin_provisioned = true
  floppy_files          = ["./autounattend.xml", "Scripts/vmtools.cmd", "Scripts/level0-setup.ps1"]
  folder                = "${var.folder}"
  guest_os_type         = "windows2019srvNext_64Guest"
  host                  = "${var.host}"
  insecure_connection   = "true"
  iso_paths             = ["[esxi01] ISO/Windows/en-us_windows_server_2022_updated_jan_2023_x64_dvd_2897e63d.iso", "[esxi01] ISO/VMTools/VMware-Tools-windows-12.3.0-22234872.iso"]
  network               = "${var.network}"
  network_card          = "vmxnet3"
  notes                 = "${var.notes}"
  password              = "${var.vsphere_password}"
  ram                   = "4096"
  username              = "${var.vsphere_username}"
  vcenter_server        = "${var.vcenter_server}"
  vm_name               = "${var.vm_name}"
  winrm_password        = "${var.winrm_password}"
  winrm_username        = "${var.winrm_username}"
}

build {
  sources = ["source.vsphere-iso.autogenerated_1"]

  provisioner "powershell" {
    scripts = ["Scripts/level1-setup.ps1"]
  }

  provisioner "windows-restart" {
    restart_timeout = "30m"
  }

  provisioner "windows-update" {
    filters         = ["exclude:$_.Title -like '*Preview*'", "include:$true"]
    search_criteria = "IsInstalled=0"
  }

}
